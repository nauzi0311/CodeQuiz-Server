{
    "id": 3009,
    "title": "二分木3",
    "question": "#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct node{\n\tint num;\n\tstruct node* left;\n\tstruct node* right;\n}NODE;\n\nvoid insert(NODE**,int);\nNODE* search(NODE* root,int number);\n\nvoid delete(NODE* root,int number){\n  NODE* target,*parent;\n  target = search(root,number);\n  if(target != NULL){\n\tfor(parent = root;;){\n\t  if((parent->left == target) || (parent->right == target)) ???;\n\t  if(parent->num > target->num){\n\t\tparent = parent->left;\n\t  }else{\n\t\tparent = parent->right;\n\t  }\n\t}\n\tif(parent->left == target){\n\t  parent->left = NULL;\n\t}else{\n\t  parent->right = NULL;\n\t}\n\tfree(target);\n  }else{\n\tprintf(\"cannot delete\");\n  }\n}\n\nint main(){\n  int i,data[10] = {81,4,62,95,21,16,84,3,40,91};\n  NODE* root = NULL;\n  for(i = 0;i < 10;i++){\n\tinsert(&root,data[i]);\n  }\n  delete(root,95);\n  if(search(root,95) == NULL){\n\tprintf(\"not exist\");\n  }else{\n\tprintf(\"exist\");\n  }\n  return 0;\n}\n\nvoid insert(NODE** p,int data){\n  if(*p == NULL){\n\t*p = (NODE*)malloc(sizeof(NODE));\n\t(*p)->num = data;\n\t(*p)->left = NULL;\n\t(*p)->right = NULL;\n\treturn;\n  }else{\n\tif((*p)->num > data){\n\t  insert(&((*p)->left),data);\n\t}else{\n\t  insert(&((*p)->right),data);\n\t}  \n  }\n}\n\nNODE* search(NODE* root,int number){\n  NODE* node;\n  node = root;\n  if(number < node->num) {\n\tnode = node->left;\n  }else if(number > node->num){\n\tnode = node->right;\n  }else{\n\treturn node;\n  }\n}",
    "output": "not exist",
    "answer": "break",
    "exp": 80,
    "point": 4,
    "restrict": 8
}